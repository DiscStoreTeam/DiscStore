//Clase HRController
//Metodos
//Generar ID automatico
private String generateID(PositionValue position)
	{
		String ID = Position.toInt(position).toString();
		Integer count = 0;
		count = numberOfPosition(position);
		ID = ID + count.toString();
		return ID;
	}
//Contar la cantidad de trabajadores de cierto cargo
private int numberOfPosition(PositionValue positionValue)
	{
		int amount = 0;
		char position = Position.toInt(positionValue).toString().charAt(0);
		
		for(int i = 0; i < workersList.size(); i++){
			if(workersList.get(i).getWorkerID().charAt(0) == position){
				amount++;
			}
		}
		return amount;
	}
//Ordenar la lista de trabajadores por ID
private void sortWorkersList()
	{
		Collections.sort(workersList, new Comparator<Worker>() {
			@Override
			public int compare(Worker wrk1, Worker wrk2) {
				// TODO Auto-generated method stub
				return wrk1.getWorkerID().compareTo(wrk2.getWorkerID());
			}
		});
	}
--------------------------------------------------------------------------------------------------------------------------------------------------
//Clase Position
//Metodos
//Convertir el cargo en un Integer para 3 valores
public static Integer toInt(PositionValue value){
		Integer position = null;
		switch (value) {
		case manager:
			position = 0;
			break;
		case shiftManager:
			position = 1;
			break;
		case dependent:
			position = 2;
			break;
		default:
			break;
		}
		return position;
	}
//Convertir el cargo en un String para 3 valores
public static String toString(PositionValue value){
		String position = null;
		switch (value) {
		case manager:
			position = "Administrador";
			break;
		case shiftManager:
			position = "Jefe de Turno";
			break;
		case dependent:
			position = "Dependiente";
			break;
		default:
			break;
		}
		return position;
	}
	-----------------------------------------------------------------------------------------------
	
		public ArrayList<Song> searchSongs(){
		ArrayList<Song> auxiliar = new ArrayList<Song>();
		ArrayList<Song> songslist = controller.getSongsList();
		for (Song song : songslist) {
			if(textFieldSearchCD.getText().equalsIgnoreCase(song.getTitle()) || textFieldSearchCD.getText().equalsIgnoreCase(song.getAlbum()) || textFieldSearchCD.getText().equalsIgnoreCase(song.getAuthor())){
				auxiliar.add(song);
			}
		}
		return auxiliar;
	}